{"version":3,"sources":["pages/Favorites/style.js","components/FavoritePreview/style.js","components/Text/Text.js","services/eventBusService.js","services/notificationService.js","services/utilService.js","store/actions/favoritesActions.js","components/FavoritePreview/FavoritePreview.js","pages/Favorites/Favorites.jsx","components/AppNotifications.js","components/NavBar/NavBar.js","theme/ThemeProvider.js","components/UserList/style.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","constant.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","AppRouter.js","store/reducers/favoritesReducer.js","store/index.js","index.js"],"names":["Content","styled","div","FavoritesList","ul","MyCard","Card","Text","variant","children","bold","textAlign","Typography","align","style","fontWeight","eventBusService","on","eventName","listener","console","log","callListener","detail","window","addEventListener","removeEventListener","emit","data","dispatchEvent","CustomEvent","myBus","notificationService","type","txt","isIncludesStr","isStringsIncludesString","strings","string","some","currString","getFullNameFromUser","name","title","first","last","join","bigString","smallString","toLowerCase","includes","toggleFavorite","user","dispatch","getState","action","message","favoritesReducer","favorites","currFavorite","login","uuid","utilService","favorite","FavoritePreview","useDispatch","className","src","picture","large","alt","email","location","city","country","Button","startIcon","color","onClick","Favorites","useSelector","map","toast","configure","AppNotification","notify","notification","useEffect","routesMap","NavBar","history","useHistory","useLocation","React","useState","currRouteIdx","setCurrRouteIdx","pathname","findIndex","currRoute","navigate","to","push","AppBar","position","top","Tabs","value","aria-label","indicatorColor","textColor","Tab","label","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","useMemo","createMuiTheme","palette","primary","main","error","CssBaseline","UserList","Filters","Search","SearchInput","input","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","Spinner","size","thickness","CircularProgress","CheckBox","isChecked","onChange","FormControlLabel","control","Checkbox","checked","COUNTRIES","nat","users","isLoading","fetchUsers","elList","useRef","filteredCountriesNats","setFilteredCountriesNats","searchStr","setSearchStr","charAt","toUpperCase","slice","countryNat","filter","currCountryNat","handleFilterClick","placeholder","target","ref","onScroll","length","current","offsetHeight","scrollTop","scrollHeight","res","street","Object","values","getFilteredUsers","number","IconButton","Home","setUsers","setIsLoading","getUsers","axios","get","then","results","a","response","usePeopleFetch","Page","AppRouter","path","component","INITIAL_STATE","persistConfig","key","storage","whitelist","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","state","updatedFavorite","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.790f86d2.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const FavoritesList = styled.ul`\r\n  overflow-y: scroll;\r\n  padding-bottom: 30px;\r\n  max-width: 1000px;\r\n  flex-wrap: wrap;\r\n  row-gap: 10px;\r\n  column-gap: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  @media (max-width: 450px) {\r\n    row-gap: unset;\r\n    column-gap: unset;\r\n    > *:not(last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n","import { Card } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const MyCard = styled(Card)`\r\n  && {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 300px;\r\n    padding: 20px;\r\n    > .content {\r\n      align-self: stretch;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      > img {\r\n        width: 100px;\r\n        height: 100px;\r\n        border-radius: 50%;\r\n      }\r\n      > *:not(last-child) {\r\n        margin-bottom: 10px;\r\n      }\r\n    }\r\n    @media (max-width: 450px) {\r\n      width: 90%;\r\n    }\r\n  }\r\n`;\r\n","// @ts-nocheck\r\nimport React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Text = ({ variant = \"body1\", children, bold = false, textAlign = \"left\" }) => {\r\n  return (\r\n    <Typography\r\n      variant={variant}\r\n      align={textAlign}\r\n      style={{ fontWeight: bold ? \"bold\" : \"400\" }}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","function on(eventName, listener) {\r\n  console.log(\"on:\", eventName);\r\n  const callListener = ({ detail }) => {\r\n    listener(detail);\r\n  };\r\n\r\n  window.addEventListener(eventName, callListener);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventName, callListener);\r\n  };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\n// @ts-ignore\r\nwindow.myBus = eventBusService;\r\n","import { eventBusService } from \"./eventBusService\";\r\n\r\nexport const notificationService = {\r\n  notify(type, txt) {\r\n    console.log(\"emitting notify\");\r\n    eventBusService.emit(\"notify\", { type, txt });\r\n  },\r\n};\r\n","export default {\r\n  isIncludesStr,\r\n  isStringsIncludesString,\r\n  getFullNameFromUser,\r\n};\r\n\r\nfunction isIncludesStr(bigString, smallString) {\r\n  return bigString.toLowerCase().includes(smallString.toLowerCase());\r\n}\r\n\r\nfunction isStringsIncludesString(strings, string) {\r\n  return strings.some((currString) => isIncludesStr(currString, string));\r\n}\r\n\r\nfunction getFullNameFromUser({ name: { title, first, last } }) {\r\n  return [title, first, last].join(\" \");\r\n}\r\n","import { notificationService } from \"../../services/notificationService\";\r\nimport utilService from \"../../services/utilService\";\r\n\r\nexport function toggleFavorite(user) {\r\n  return (dispatch, getState) => {\r\n    const { favorites } = getState().favoritesReducer;\r\n    let action;\r\n    let message;\r\n    if (favorites.some((currFavorite) => currFavorite.login.uuid === user.login.uuid)) {\r\n      action = {\r\n        type: \"REMOVE_FAVORITE\",\r\n        uuid: user.login.uuid,\r\n      };\r\n      message = `Removed ${utilService.getFullNameFromUser(user)} from favorites`;\r\n    } else {\r\n      action = {\r\n        type: \"ADD_FAVORITE\",\r\n        favorite: user,\r\n      };\r\n      message = `Added ${utilService.getFullNameFromUser(user)} to favorites`;\r\n    }\r\n    dispatch(action);\r\n    notificationService.notify(\"success\", message);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Card, IconButton } from \"@material-ui/core\";\r\nimport FavIcon from \"@material-ui/icons/Favorite\";\r\n\r\nimport * as S from \"./style\";\r\nimport Text from \"../Text\";\r\nimport { toggleFavorite } from \"../../store/actions/favoritesActions\";\r\nimport utilService from \"../../services/utilService\";\r\n\r\nconst FavoritePreview = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <S.MyCard className=\"favorite-preview\" key={user.login.uuid}>\r\n      <div className=\"content\">\r\n        <img src={user.picture.large} alt=\"\" />\r\n        <Text variant=\"h6\" textAlign=\"center\" bold>\r\n          {utilService.getFullNameFromUser(user)}\r\n        </Text>\r\n        <Text variant=\"body2\" textAlign=\"center\">\r\n          {user?.email ? user.email : \"No email\"}\r\n        </Text>\r\n        <Text variant=\"body2\" textAlign=\"center\">\r\n          {user?.location.city} {user?.location.country}\r\n        </Text>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        startIcon={<FavIcon />}\r\n        color={\"secondary\"}\r\n        onClick={() => dispatch(toggleFavorite(user))}\r\n      >\r\n        favorites\r\n      </Button>\r\n    </S.MyCard>\r\n  );\r\n};\r\n\r\nexport default FavoritePreview;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport * as S from \"./style\";\r\nimport FavoritePreview from \"../../components/FavoritePreview\";\r\nimport Text from \"../../components/Text\";\r\n\r\nconst Favorites = () => {\r\n  // @ts-ignore\r\n  const { favorites } = useSelector(({ favoritesReducer }) => favoritesReducer);\r\n  return (\r\n    <S.Content>\r\n      <Text variant=\"h2\" bold>\r\n        Favorites\r\n      </Text>\r\n\r\n      <S.FavoritesList>\r\n        {favorites.map((currFavorite) => (\r\n          <FavoritePreview key={currFavorite.login.uuid} user={currFavorite} />\r\n        ))}\r\n      </S.FavoritesList>\r\n    </S.Content>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { eventBusService } from \"../services/eventBusService\";\r\ntoast.configure();\r\n\r\nconst AppNotification = () => {\r\n  const notify = (notification) => {\r\n    toast[notification.type](notification.txt);\r\n  };\r\n\r\n  useEffect(() => {\r\n    eventBusService.on(\"notify\", notify);\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default AppNotification;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nconst routesMap = [\"/\", \"/favorites\"];\r\n\r\nconst NavBar = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [currRouteIdx, setCurrRouteIdx] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/favorites\") {\r\n      setCurrRouteIdx(routesMap.findIndex((currRoute) => currRoute === \"/favorites\"));\r\n    } else {\r\n      setCurrRouteIdx(routesMap.findIndex((currRoute) => currRoute === \"/\"));\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const navigate = (to) => {\r\n    history.push(to);\r\n    setCurrRouteIdx(routesMap.findIndex((currRoute) => currRoute === to));\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={currRouteIdx}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab onClick={() => navigate(\"/\")} label=\"Home\" />\r\n        <Tab onClick={() => navigate(\"/favorites\")} label=\"Favorites\" />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 650px) {\r\n    padding: 0px 20px;\r\n  }\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  & > *:not(last-child) {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n\r\nexport const Search = styled.div`\r\n  display: flex;\r\n  align-itmes: center;\r\n  border-radius: 4px;\r\n  padding: 5px 20px;\r\n  padding-inline-end: 5px;\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  &:hover: {\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n  }\r\n  & > *:not(last-child) {\r\n    margin-inline-end: 0.3rem;\r\n  }\r\n`;\r\nexport const SearchInput = styled.input`\r\n  font-size: 16px;\r\n  flex-grow: 1;\r\n  background: unset;\r\n  outline: unset;\r\n  border: unset;\r\n  color: rgb(255, 255, 255);\r\n  &::placeholder {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  margin-block-start: 30px;\r\n  overflow-y: scroll;\r\n  @media (max-width: 600px) {\r\n    width: unset;\r\n  }\r\n`;\r\n// height: calc(100vh - 270px);\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  > *:not(last-child) {\r\n    margin-inline-end: 25px;\r\n  }\r\n  &:hover {\r\n    .icon-button-wrapper {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  @media (max-width: 600px) {\r\n    > *:not(last-child) {\r\n      margin-inline-end: unset;\r\n    }\r\n    flex-direction: column;\r\n    align-items: center;\r\n    > *:not(last-child) {\r\n      margin-bottom: 0.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-grow: 1;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n  @media (max-width: 600px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: opacity 0.2s ease-in-out;\r\n  opacity: 0;\r\n  &.active {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","export const SIZE = {\r\n  small: \"small\",\r\n  medium: \"medium\",\r\n  large: \"large\",\r\n};\r\n\r\nexport const VARIANT = {\r\n  text: \"text\",\r\n  filled: \"filled\",\r\n  outlined: \"outlined\",\r\n  standard: \"standard\",\r\n  contained: \"contained\",\r\n};\r\n\r\nexport const COLORS = {\r\n  default: \"default\",\r\n  inherit: \"inherit\",\r\n  primary: \"primary\",\r\n  secondary: \"secondary\",\r\n};\r\n\r\nexport const COUNTRIES = [\r\n  { nat: \"BR\", name: \"brazil\" },\r\n  { nat: \"AU\", name: \"australia\" },\r\n  { nat: \"CA\", name: \"canada\" },\r\n  { nat: \"DE\", name: \"germany\" },\r\n];\r\n","import React, { useRef, useState } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport * as S from \"./style\";\r\nimport Text from \"../../components/Text\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport CheckBox from \"../../components/CheckBox\";\r\nimport { toggleFavorite } from \"../../store/actions/favoritesActions\";\r\nimport utilService from \"../../services/utilService\";\r\nimport { COUNTRIES } from \"../../constant\";\r\n\r\nconst UserList = ({ users, isLoading, fetchUsers }) => {\r\n  const dispatch = useDispatch();\r\n  const elList = useRef(null);\r\n  const [filteredCountriesNats, setFilteredCountriesNats] = useState([]);\r\n  // @ts-ignore\r\n  const { favorites } = useSelector(({ favoritesReducer }) => favoritesReducer);\r\n  const [searchStr, setSearchStr] = useState(\"\");\r\n\r\n  const getFilteredUsers = () => {\r\n    let res = users;\r\n\r\n    //countries filtering:\r\n    res = !filteredCountriesNats.length\r\n      ? res\r\n      : res.filter(({ nat }) => {\r\n          return filteredCountriesNats.includes(nat);\r\n        });\r\n\r\n    //string filtering\r\n    res = res.filter(({ email, name, location: { street, city, country } }) => {\r\n      return utilService.isStringsIncludesString(\r\n        [email || \"\", street.name, city, country, Object.values(name).join(\" \")],\r\n        searchStr\r\n      );\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  const handleFilterClick = (countryNat) => {\r\n    if (filteredCountriesNats.includes(countryNat)) {\r\n      return setFilteredCountriesNats(\r\n        filteredCountriesNats.filter((currCountryNat) => currCountryNat !== countryNat)\r\n      );\r\n    }\r\n    setFilteredCountriesNats([...filteredCountriesNats, countryNat]);\r\n  };\r\n\r\n  const onListScroll = () => {\r\n    if (!isLoading && users.length < 150) {\r\n      const { offsetHeight, scrollTop, scrollHeight } = elList.current;\r\n      if (offsetHeight + scrollTop >= scrollHeight - 100) {\r\n        fetchUsers();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        {COUNTRIES.map(({ nat, name }) => (\r\n          <CheckBox\r\n            isChecked={filteredCountriesNats.includes(nat)}\r\n            key={nat}\r\n            value={nat}\r\n            label={name.charAt(0).toUpperCase() + name.slice(1)}\r\n            onChange={() => handleFilterClick(nat)}\r\n          />\r\n        ))}\r\n      </S.Filters>\r\n\r\n      <S.Search className=\"search flex align-center\">\r\n        <SearchIcon />\r\n        <S.SearchInput\r\n          placeholder=\"Search...\"\r\n          className=\"fg-1\"\r\n          value={searchStr}\r\n          onChange={({ target: { value } }) => setSearchStr(value)}\r\n        />\r\n      </S.Search>\r\n      <S.List ref={elList} className=\"users-list\" onScroll={onListScroll}>\r\n        {getFilteredUsers().map((user) => {\r\n          return (\r\n            <S.User key={user.login.uuid}>\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text variant=\"h6\" bold>\r\n                  {utilService.getFullNameFromUser(user)}\r\n                </Text>\r\n                <Text variant=\"body2\">{user?.email}</Text>\r\n                <Text variant=\"body2\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text variant=\"body2\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper\r\n                className={`icon-button-wrapper ${\r\n                  favorites.some(\r\n                    (currFavorite) => currFavorite.login.uuid === user.login.uuid\r\n                  )\r\n                    ? \"active\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                <IconButton onClick={() => dispatch(toggleFavorite(user))}>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n        {users.length >= 150 && (\r\n          <Text variant=\"body1\">You have reached the allowed amount of users</Text>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport Text from \"../../components/Text\";\r\nimport UserList from \"../../components/UserList\";\r\nimport { usePeopleFetch } from \"../../hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading, fetchUsers } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Content>\r\n      <Text variant=\"h2\" bold>\r\n        PplFinder\r\n      </Text>\r\n      <UserList users={users} isLoading={isLoading} fetchUsers={fetchUsers} />\r\n    </S.Content>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const getUsers = () => {\r\n    return axios\r\n      .get(`https://randomuser.me/api/?results=25&page=1`)\r\n      .then((res) => res.data.results);\r\n  };\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await getUsers();\r\n    setIsLoading(false);\r\n    setUsers([...users, ...response]);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Favorites from \"./pages/Favorites\";\r\nimport AppNotification from \"./components/AppNotifications\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { ThemeProvider } from \"./theme\";\r\nimport { Home } from \"./pages\";\r\n\r\nconst Page = styled.div`\r\n  height: 100%;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <AppNotification />\r\n        <Page>\r\n          <Switch>\r\n            <Route path=\"/favorites\" component={Favorites} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Page>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","const INITIAL_STATE = {\r\n  favorites: [],\r\n};\r\n\r\nexport function favoritesReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case \"SET_FAVORITES\":\r\n      return {\r\n        ...state,\r\n        favorites: action.favorites,\r\n      };\r\n    case \"ADD_FAVORITE\":\r\n      console.log(\"adding\");\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.favorite],\r\n      };\r\n    case \"REMOVE_FAVORITE\":\r\n      return {\r\n        ...state,\r\n        favorites: state.favorites.filter(\r\n          (currFavorite) => currFavorite.login.uuid !== action.uuid\r\n        ),\r\n      };\r\n    case \"UPDATE_FAVORITE\":\r\n      const { updatedFavorite } = action;\r\n      return {\r\n        ...state,\r\n        favorites: state.favorites.map((currFavorite) =>\r\n          currFavorite.login.uuid === updatedFavorite.login.uuid\r\n            ? updatedFavorite\r\n            : currFavorite\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport thunk from \"redux-thunk\";\r\nimport { favoritesReducer } from \"./reducers/favoritesReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"favoritesReducer\"],\r\n};\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  favoritesReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"./AppRouter\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistor, store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./main.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <AppRouter />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}